String is probably the most commonly used class in Java’s class library.

Look up Newton's square root method

The first thing to understand about strings is that every string you create is actually an object of type String.
Even string constants are actually String objects. For example, in the statement
       System.out.println("This is a String, too");
the string "This is a String, too" is a String object.

The second thing to understand about strings is that objects of type String are immutable.

String is not an array of characters. We cannot do line[0]

String are immutable in java

In string builder, only one object is made, and the changes are done in that object only.
The reference is also the same and isn't changed.

When we do sout: ex: sout(34)
it will run toString() method on the input no matter what.
i.e.          System.out.println(builder);
             System.out.println(builder.toString());
                both are same

String builder is a separate datatype. command click on string builder
it will show that StringBuilder is a separate class.

Java’s string type, called String, is not a primitive type. Nor is it simply an array of characters.
Rather, String defines an object.
The String type is used to declare string variables. You can also declare arrays of strings.
A quoted string constant can be assigned to a String variable. A variable of type String can be assigned to another
variable of type String. You can use an object of type String as an argument to println( ).

String str = "this is a test";
     System.out.println(str);
Here, str is an object of type String.


System.out.println("Hello" + new ArrayList<>()); // This works
System.out.println(new Integer(17) + "Hello"); // This works too

System.out.println(new ArrayList<>() + new Integer(17)); // This does not
The operator + is defined for primitives and when one side is a string,
but you can kind of get around this with an empty string first :
System.out.println("" + new ArrayList<>() + new Integer(17)); // This works

Command-line arguments:
One important use of strings in Java programming is to enable a mechanism for passing information from the command line
to the program. The mechanism is simple. When you type the java command followed by a library name followed by a
sequence of strings, the Java system invokes the main() method in that library with an array of strings as argument:
the strings typed after the library name.

printf() :
   float num = 123.2f;
   System.out.printf("Num is %.2f yeah", num);

Output :
Num is 123.20 yeah     // .2f is replaced by num

String value = String.format("PI is %.2f", Math.PI);
System.out.println(value);


System.out.println('b' + 'c');
System.out.println((char) ('a' + 4));

